Naive Approach 
=============================================================================
#include <bits/stdc++.h>
using namespace std;
bool leftFirst(string &str)
{
    for(int i=0;i<str.length();i++)
    {
        for(int j=i+1;j<str.length();j++)
        {
            if(str[i]==str[j])
            {
                return i;
            }
        }
    }
    return -1;
}
int main() {
	string s1="geeksforgeeks";
	cout<<leftFirst(s1);
	

	
	return 0;
}

========================================================================================
Efficent Approach
========================================================================================
#include <bits/stdc++.h>
using namespace std;
const int Char =256;
bool leftFirst(string &str)
{
    int count[Char]={0};
    for(int i=0;i<str.length();i++)
    {
        count[str[i]]++;
    }
    for(int i=0;i<str.length();i++)
    {
        if(count[str[i]]>1)
         return i;
        
    }
    return -1;
}
int main() {
	string s1="abbc";
	cout<<leftFirst(s1);
	

	
	return 0;
}
